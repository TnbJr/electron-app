/*********************************************************/
/* Combined a.k.a. "Swole" Input */

.combined-input {
  display: flex; // use flexbox so the text inputs can automatically stretch to fill remaining space
  
  &.mod-spaced {
    > :not(:last-child) {
      margin-right: .75rem;
    }
  }
  
  &:not(.mod-spaced) {
    > :first-child {
      .select--placeholder,
      input[type=text] {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
      }
    }

    > :not(:first-child):not(:last-child) {
      .select--placeholder,
      input[type=text] {
        border-radius: 0;
      }
    }

    > :last-child {
      .select--placeholder,
      input[type=text] {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
      }
    }
  }
    
  // give the option of making the .text-input stretch
  // if .text-input has any size mods, it overwrites them
  &.mod-stretch .text-input {
    flex-grow: 1;
    max-width: 100%;
    min-width: 0;
    width: auto;
  }
  
  // additional rules needed when children are wrapped in <div class="validation-item">
  // unfortunately, this requires .text-input to always be the first child, because parent selectors don't exist in CSS (yet?)
  &.mod-stretch {
    > .validation-item {
      display: flex;

      &:first-child {
        flex: 1;
      }

      > .text-input {
        display: flex;
      }
    }
  }

  // make focus box-shadow appear over adjacent fields

  .text-input input[type=text]:focus {
    position: relative;
    z-index: 2;
  }

  .select select:focus {
    z-index: 3;

    & ~ .select--placeholder {
      z-index: 2;
    }
  }
}